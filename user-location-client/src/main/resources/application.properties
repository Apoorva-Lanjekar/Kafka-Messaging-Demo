spring.application.name=cabbook
spring.cloud.config.enabled=true
spring.config.import = optional:configserver:http://localhost:8888
management.endpoints.web.exposure.include=*
#spring.profiles.active=dev

#backup value
cabbook.value=99

#Kafka
spring.kafka.consumer.group-id=location_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
server.port=3333

#Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/DemoDB?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=postgres
spring.datasource.password=root

# Hibernate

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

spring.jpa.database=postgresql
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
